#include <gtest/gtest.h>
#include "Parser.h"
#include <vector>

class ParserTests : public testing::Test
{};

TEST_F(ParserTests, Test1) {
    std::vector<byte> bytes = {
        0x55, // push ebp
        0x8B, 0xEC, // mov ebp, esp
        0x51, // push ecx
        0xC7, 0x45, 0xFC, 0x01, 0x00, 0x00, 0x00, // mov [ebp-4], 1
        0x8B, 0x45, 0xFC, // mov eax, [ebp-4]
        0x83, 0xC0, 0x01, // add eax, 1
        0x89, 0x45, 0xFC, // mov [ebp-4], eax
        0x8B, 0x45, 0xFC, // mov eax, [ebp-4]
        0x8B, 0xE5, // mov esp, ebp
        0x5D, // pop ebp
        0xC3, // ret

        0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 

        0x55, // push ebp
        0x8B, 0xEC, // mov ebp, esp
        0x51, // push ecx
        0xC7, 0x45, 0xFC, 0x02, 0x00, 0x00, 0x00, // mov [ebp-4], 2
        0x8B, 0x45, 0xFC, // mov eax, [ebp-4]
        0x83, 0xE8, 0x01, // sub eax, 1
        0x89, 0x45, 0xFC, // mov [ebp-4], eax
        0x8B, 0x45, 0xFC, // mov eax, [ebp-4]
        0x8B, 0xE5, // mov esp, ebp
        0x5D, // pop ebp
        0xC3, // ret

        0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 

        0x55, // push ebp
        0x8B, 0xEC, // mov ebp, esp
        0xE8, 0xB8, 0xFF, 0xFF, 0xFF, // call foo()
        0xE8, 0xD3, 0xFF, 0xFF, 0xFF, // call bar()
        0x33, 0xC0, // xor eax, eax
        0x5D, // pop ebp
        0xC3, // ret
        0xCC, // int3
        0xCC, // int3
        0xCC, // int3
    };
    auto p = Parser(bytes);
    p.parse(0x40);
}