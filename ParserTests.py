from Parser import Parser

def test1():
  bytes = [
    0x55, # push ebp
    0x8B, 0xEC, # mov ebp, esp
    0x51, # push ecx
    0xC7, 0x45, 0xFC, 0x01, 0x00, 0x00, 0x00, # mov [ebp-4], 1
    0x8B, 0x45, 0xFC, # mov eax, [ebp-4]
    0x83, 0xC0, 0x01, # add eax, 1
    0x89, 0x45, 0xFC, # mov [ebp-4], eax
    0x8B, 0x45, 0xFC, # mov eax, [ebp-4]
    0x8B, 0xE5, # mov esp, ebp
    0x5D, # pop ebp
    0xC3, # ret

    0xCC, 0xCC, 0xCC, 0xCC, 0xCC,

    0x55, # push ebp
    0x8B, 0xEC, # mov ebp, esp
    0x51, # push ecx
    0xC7, 0x45, 0xFC, 0x02, 0x00, 0x00, 0x00, # mov [ebp-4], 2
    0x8B, 0x45, 0xFC, # mov eax, [ebp-4]
    0x83, 0xE8, 0x01, # sub eax, 1
    0x89, 0x45, 0xFC, # mov [ebp-4], eax
    0x8B, 0x45, 0xFC, # mov eax, [ebp-4]
    0x8B, 0xE5, # mov esp, ebp
    0x5D, # pop ebp
    0xC3, # ret

    0xCC, 0xCC, 0xCC, 0xCC, 0xCC,

    0x55, # push ebp
    0x8B, 0xEC, # mov ebp, esp
    0xE8, 0xB8, 0xFF, 0xFF, 0xFF, # call Parser()
    0xE8, 0xD3, 0xFF, 0xFF, 0xFF, # call bar()
    0x33, 0xC0, # xor eax, eax
    0x5D, # pop ebp
    0xC3, # ret
    0xCC, # int3
    0xCC, # int3
    0xCC, # int3
  ]
  parser = Parser(bytes)
  parser.parse(0x40)
  parser.print_out()

def test2():
  bytes = [
    0x55, # push ebp
    0x8B, 0xEC, # mov ebp, esp
    0x83, 0xEC, 0x28, # sub esp, 28
    0xC7, 0x45, 0xDC, 0x01, 0x00, 0x00, 0x00, # mov [ebp-24], 1
    0xC7, 0x45, 0xE4, 0x02, 0x00, 0x00, 0x00, # mov [ebp-1C], 2
    0xC7, 0x45, 0xFC, 0x03, 0x00, 0x00, 0x00, # mov [ebp-4], 3
    0xC7, 0x45, 0xF8, 0x04, 0x00, 0x00, 0x00, # mov [ebp-8], 4
    0xC7, 0x45, 0xF4, 0x05, 0x00, 0x00, 0x00, # mov [ebp-C], 5
    0xC7, 0x45, 0xF0, 0x06, 0x00, 0x00, 0x00, # mov [ebp-10], 6
    0xC7, 0x45, 0xEC, 0x07, 0x00, 0x00, 0x00, # mov [ebp-14], 7
    0xC7, 0x45, 0xE8, 0x08, 0x00, 0x00, 0x00, # mov [ebp-18], 8
    0xC7, 0x45, 0xE0, 0x09, 0x00, 0x00, 0x00, # mov [ebp-20], 9
    0xC7, 0x45, 0xD8, 0x0A, 0x00, 0x00, 0x00, # mov [ebp-28], A
    0x8B, 0x45, 0xE4, # eax = [ebp - 1C]
    0x03, 0x45, 0xFC, # add eax, [ebp-4]
    0x89, 0x45, 0xDC, # mov [ebp-24], eax
    0x8B, 0x4D, 0xFC, # mov ecx, [ebp-4]
    0x2B, 0x4D, 0xF8, # sub ecx, [ebp-8]
    0x89, 0x4D, 0xE4, # mov [ebp-1C], ecx
    0x8B, 0x55, 0xF8, # mov edx, [ebp-8]
    0x0F, 0xAF, 0x55, 0xF4, # imul edx, [ebp-C]
    0x89, 0x55, 0xFC, # mov [ebp-4], edx
    0x8B, 0x45, 0xF4, # mov eax, [ebp-C]
    0x99, # cdq
    0xF7, 0x7D, 0xF0, # idiv [ebp-10]
    0x89, 0x45, 0xF8, # mov [ebp-8], eax
    0x8B, 0x45, 0xF0, # mov eax, [ebp-10]
    0x99, # cdq
    0xF7, 0x7D, 0xEC, # idiv [ebp-14]
    0x89, 0x55, 0xF4, # mov [ebp-C], edx
    0x8B, 0x45, 0xEC, # mov eax, [ebp-14]
    0x33, 0x45, 0xE8, # xor eax, [ebp-18]
    0x89, 0x45, 0xF0, # mov [ebp-10], eax
    0x8B, 0x4D, 0xE8, # mov ecx, [ebp-18]
    0x23, 0x4D, 0xE0, # and ecx, [ebp-20]
    0x89, 0x4D, 0xEC, # mov [ebp-14], ecx
    0x8B, 0x55, 0xE0, # mov edx, [ebp-20]
    0x0B, 0x55, 0xD8, # or edx, [ebp-28]
    0x89, 0x55, 0xE8, # mov [ebp-18], edx
    0x33, 0xC0, # xor eax, eax
    0x8B, 0xE5, # mov esp, ebp
    0x5D, # pop ebp
    0xC3, # ret
  ]
  parser = Parser(bytes)
  parser.parse(0x0)
  parser.print_out()

def test3():
  bytes = [
    0x55, # push ebp
    0x8B, 0xEC, # ebp = esp
    0x83, 0xEC, 0x10, # esp -= 0x10
    0xC7, 0x45, 0xF0, 0x01, 0x00, 0x00, 0x00, # local_10 = 1
    0xC7, 0x45, 0xF8, 0x02, 0x00, 0x00, 0x00, # local_8 = 2
    0xC7, 0x45, 0xF4, 0x03, 0x00, 0x00, 0x00, # local_C = 3
    0x83, 0x7D, 0xF0, 0x04, # cmp local_10, 4
    0x7E, 0x1E, # jle +0x1E
    0x83, 0x7D, 0xF8, 0x03, # cmp local_8, 3
    0x7D, 0x16, # jge +0x16
    0x83, 0x7D, 0xF4, 0x02, # cmp local_4, 0x5
    0x75, 0x09, # jne +0x09
    0xC7, 0x45, 0xFC, 0x05, 0x00, 0x00, 0x00, # local_4 = 5
    0xEB, 0x07, # jmp +0x07
    0xC7, 0x45, 0xFC, 0x04, 0x00, 0x00, 0x00, # local_4 = 4
    0xEB, 0x25, # jmp +0x25
    0x83, 0x7D, 0xF8, 0x05, # cmp local_8, 5
    0x7F, 0x09, # jg +0x09
    0xC7, 0x45, 0xFC, 0x03, 0x00, 0x00, 0x00, # local_4 = 3
    0xEB, 0x16, # jmp +0x16
    0x83, 0x7D, 0xF4, 0x07, # cmp local_C, 7
    0x74, 0x09, # je +0x09
    0xC7, 0x45, 0xFC, 0x02, 0x00, 0x00, 0x00, # local_4 = 2
    0xEB, 0x07, # jmp +0x07
    0xC7, 0x45, 0xFC, 0x01, 0x00, 0x00, 0x00, # local_4 = 1
    0x33, 0xC0, # xor eax, eax
    0x8B, 0xE5, # mov esp, ebp
    0x5D, # pop ebp
    0xC3, # ret
  ]
  parser = Parser(bytes)
  parser.parse(0x0)
  parser.print_out()

def test4():
  bytes = [
    0x56, # push esi
    0x8B, 0xF1, # mov esi, ecx
    0x83, 0xFE, 0x01, # cmp esi, 1
    0x75, 0x04, # jne +0x04
    0x8B, 0xC1, # mov eax, ecx
    0x5E, # pop esi
    0xC3, # ret
    0x8D, 0x4E, 0xFF, # lea ecx, [esi-1]
    0xE8, 0xEC, 0xFF, 0xFF, 0xFF, # call factorial()
    0x0F, 0xAF, 0xC6, # imul eax, esi
    0x5E, # pop esi
    0xC3, # ret

    0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,

    0x55, # push ebp
    0x8B, 0xEC, # mov ebp, esp
    0x83, 0xE4, 0xF8, # and esp, 0xFFFFFFF8 (sanity check)
    0x68, 0xB0, 0x13, 0xA0, 0x00, # push 0x00A013B0
    0xB9, 0x13, 0x00, 0x00, 0x00, # mov ecx, 13
    0xE8, 0xCB, 0xFF, 0xFF, 0xFF, # call factorial()
    0xB9, 0x09, 0x00, 0x00, 0x00, # mov ecx, 0
    0x8D, 0x04, 0x80, # lea eax, eax + eax*4
    0xC1, 0xE0, 0x02, # shl eax, 2
    0x50, # push eax
    0xE8, 0xBA, 0xFF, 0xFF, 0xFF, # call factorial()
    0xB9, 0x04, 0x00, 0x00, 0x00, # mov ecx, 4
    0x8D, 0x04, 0x80, # lea eax, eax + eax*4
    0x03, 0xC0, # add eax, eax
    0x50, # push eax
    0xE8, 0xAA, 0xFF, 0xFF, 0xFF, # call factorial()
    0xBA, 0x48, 0x31, 0xA0, 0x00, # mov edx, 0x00A03148
    0x8D, 0x04, 0x80, # lea eax, eax + eax*4
    0x33, 0xC0, # xor eax, eax
    0x8B, 0xE5, # mov esp, ebp
    0x5D, # pop ebp
    0xC3, # ret
  ]
  parser = Parser(bytes)
  parser.parse(0x20)
  parser.print_out()

def test5():
  bytes = [
    0x55, # push ebp
    0x8B, 0xEC, # mov ebp, esp
    0x83, 0xEC, 0x08, # sub esp, 8
    0xC7, 0x45, 0xFC, 0x01, 0x00, 0x00, 0x00, # mov [ebp-4], 1
    0xC7, 0x45, 0xF8, 0x01, 0x00, 0x00, 0x00, # mov [ebp-8], 1
    0x83, 0x7D, 0xFC, 0x00, # cmp [ebp-4], 0
    0x75, 0x0F, # jne +0x0F
    0x83, 0x7D, 0xF8, 0x00, # cmp [ebp-8], 0
    0x75, 0x09, # jne +0x09
    0xC7, 0x45, 0xFC, 0x06, 0x00, 0x00, 0x00, # cmp [ebp-4], 6
    0xEB, 0x1C, # jmp +0x1C
    0x83, 0x7D, 0xFC, 0x01, # cmp [ebp-4], 1
    0x74, 0x06, # je +0x06
    0x83, 0x7D, 0xF8, 0x01, # cmp [ebp-8], 1
    0x75, 0x09, # jne +0x09
    0xC7, 0x45, 0xFC, 0x07, 0x00, 0x00, 0x00, # mov [ebp-4], 7
    0xEB, 0x07, # jmp +0x07
    0xC7, 0x45, 0xFC, 0x08, 0x00, 0x00, 0x00, # mov [ebp-4], 8
    0x33, 0xC0, # xor eax, eax
    0x8B, 0xE5, # mov esp, ebp
    0x5D, # pop ebp
    0xC3, # ret
  ]
  parser = Parser(bytes)
  parser.parse(0x0)
  parser.print_out()

def test6():
  bytes = [
    0x55, # push ebp
    0x8B, 0xEC, # mov ebp,esp
    0x83, 0xEC, 0x08, # sub esp,8
    0x56, # push esi
    0xC7, 0x45, 0xF8, 0x01, 0x00, 0x00, 0x00, # mov dword ptr ss:[ebp-8],1
    0x8B, 0x45, 0xF8, # mov eax,dword ptr ss:[ebp-8]
    0x8D, 0x44, 0x00, 0x03, # lea eax,dword ptr ds:[eax+eax+3]
    0x99, # cdq
    0x83, 0xE2, 0x03, # and edx,3
    0x03, 0xC2, # add eax,edx
    0xC1, 0xF8, 0x02, # sar eax,2
    0x6B, 0x4D, 0xF8, 0x05, # imul ecx,dword ptr ss:[ebp-8],5
    0x83, 0xC1, 0x06, # add ecx,6
    0x2B, 0xC1, # sub eax,ecx
    0x89, 0x45, 0xFC, # mov dword ptr ss:[ebp-4],eax
    0x8B, 0x55, 0xFC, # mov edx,dword ptr ss:[ebp-4]
    0xC1, 0xE2, 0x02, # shl edx,2
    0x6B, 0xCA, 0x03, # imul ecx,edx,3
    0x8B, 0x45, 0xFC, # mov eax,dword ptr ss:[ebp-4]
    0x99, # cdq
    0xBE, 0x03, 0x00, 0x00, 0x00, # mov esi,3
    0xF7, 0xFE, # idiv esi
    0x6B, 0xD2, 0x0A, # imul edx,edx,0xA
    0x03, 0xCA, # add ecx,edx
    0x89, 0x4D, 0xFC, # mov dword ptr ss:[ebp-4],ecx
    0x33, 0xC0, # xor eax,eax
    0x5E, # pop esi
    0x8B, 0xE5, # mov esp,ebp
    0x5D, # pop ebp
    0xC3, # ret
  ]
  parser = Parser(bytes)
  parser.parse(0x00)
  parser.print_out()
  
def test7():
  bytes = [
    0x83, 0xEC, 0x64, # sub esp,64
    0x8D, 0x4C, 0x24, 0x14, # lea ecx,dword ptr ss:[esp+14]
    0x53, # push ebx
    0x55, # push ebp
    0x56, # push esi
    0x57, # push edi
    0xE8, 0x90, 0x7D, 0xFF, 0xFF, # call <witness_d3d11.public: __thiscall Pattern_Judgement::Pattern_Judgement(v
    0x8B, 0x74, 0x24, 0x78, # mov esi,dword ptr ss:[esp+78]
    0xF6, 0x86, 0xB4, 0x03, 0x00, 0x00, 0x08, # test byte ptr ds:[esi+3B4],8
    0x74, 0x29, # je witness_d3d11.4AB116
    0x8B, 0xCE, # mov ecx,esi
    0xE8, 0xDC, 0xED, 0xFF, 0xFF, # call <witness_d3d11.public: void __thiscall Entity_Machine_Panel::init_dot_re
    0x33, 0xC9, # xor ecx,ecx
    0x39, 0x8E, 0x5C, 0x03, 0x00, 0x00, # cmp dword ptr ds:[esi+35C],ecx
    0x7E, 0x18, # jle witness_d3d11.4AB116
    0x8B, 0xFF, # mov edi,edi
    0x8B, 0x86, 0x94, 0x03, 0x00, 0x00, # mov eax,dword ptr ds:[esi+394]
    0xC7, 0x04, 0x88, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ds:[eax+ecx*4],0
    0x41, # inc ecx
    0x3B, 0x8E, 0x5C, 0x03, 0x00, 0x00, # cmp ecx,dword ptr ds:[esi+35C]
    0x7C, 0xEA, # jl witness_d3d11.4AB100
    0x32, 0xDB, # xor bl,bl
    0x83, 0xBE, 0xC0, 0x02, 0x00, 0x00, 0x00, # cmp dword ptr ds:[esi+2C0],0
    0x0F, 0x84, 0xD2, 0x00, 0x00, 0x00, # je witness_d3d11.4AB1F7
    0x8B, 0xBE, 0xA4, 0x03, 0x00, 0x00, # mov edi,dword ptr ds:[esi+3A4]
    0x33, 0xC9, # xor ecx,ecx
    0x8B, 0x9E, 0x98, 0x03, 0x00, 0x00, # mov ebx,dword ptr ds:[esi+398]
    0x8B, 0xC7, # mov eax,edi
    0xBA, 0x04, 0x00, 0x00, 0x00, # mov edx,4
    0xF7, 0xE2, # mul edx
    0x0F, 0x90, 0xC1, # seto cl
    0xF7, 0xD9, # neg ecx
    0x0B, 0xC8, # or ecx,eax
    0x51, # push ecx
    0xE8, 0x0E, 0xEE, 0x29, 0x00, # call <witness_d3d11.void * __cdecl operator new[](unsigned int)>
    0x83, 0xC4, 0x04, # add esp,4
    0x8B, 0xE8, # mov ebp,eax
    0x85, 0xFF, # test edi,edi
    0x7E, 0x10, # jle witness_d3d11.4AB162
    0x8B, 0xCD, # mov ecx,ebp
    0x2B, 0xDD, # sub ebx,ebp
    0x8B, 0x04, 0x0B, # mov eax,dword ptr ds:[ebx+ecx]
    0x8D, 0x49, 0x04, # lea ecx,dword ptr ds:[ecx+4]
    0x89, 0x41, 0xFC, # mov dword ptr ds:[ecx-4],eax
    0x4F, # dec edi
    0x75, 0xF4, # jne witness_d3d11.4AB156
    0x8B, 0x9E, 0x6C, 0x03, 0x00, 0x00, # mov ebx,dword ptr ds:[esi+36C]
    0x8B, 0xBE, 0x5C, 0x03, 0x00, 0x00, # mov edi,dword ptr ds:[esi+35C]
    0x85, 0xDB, # test ebx,ebx
    0x75, 0x04, # jne witness_d3d11.4AB176
    0x33, 0xD2, # xor edx,edx
    0xEB, 0x36, # jmp witness_d3d11.4AB1AC
    0x33, 0xC9, # xor ecx,ecx
    0x8B, 0xC7, # mov eax,edi
    0xBA, 0x04, 0x00, 0x00, 0x00, # mov edx,4
    0xF7, 0xE2, # mul edx
    0x0F, 0x90, 0xC1, # seto cl
    0xF7, 0xD9, # neg ecx
    0x0B, 0xC8, # or ecx,eax
    0x51, # push ecx
    0xE8, 0xC9, 0xED, 0x29, 0x00, # call <witness_d3d11.void * __cdecl operator new[](unsigned int)>
    0x83, 0xC4, 0x04, # add esp,4
    0x8B, 0xD0, # mov edx,eax
    0x85, 0xFF, # test edi,edi
    0x7E, 0x15, # jle witness_d3d11.4AB1AC
    0x8B, 0xCA, # mov ecx,edx
    0x2B, 0xDA, # sub ebx,edx
    0xEB, 0x03, # jmp witness_d3d11.4AB1A0
    0x8D, 0x49, 0x00, # lea ecx,dword ptr ds:[ecx]
    0x8B, 0x04, 0x0B, # mov eax,dword ptr ds:[ebx+ecx]
    0x8D, 0x49, 0x04, # lea ecx,dword ptr ds:[ecx+4]
    0x89, 0x41, 0xFC, # mov dword ptr ds:[ecx-4],eax
    0x4F, # dec edi
    0x75, 0xF4, # jne witness_d3d11.4AB1A0
    0x33, 0xC9, # xor ecx,ecx
    0x8B, 0xFF, # mov edi,edi
    0x3B, 0x8E, 0xCC, 0x02, 0x00, 0x00, # cmp ecx,dword ptr ds:[esi+2CC]
    0x7D, 0x14, # jge witness_d3d11.4AB1CC
    0x8B, 0x86, 0xD4, 0x02, 0x00, 0x00, # mov eax,dword ptr ds:[esi+2D4]
    0x8B, 0x04, 0x88, # mov eax,dword ptr ds:[eax+ecx*4]
    0x41, # inc ecx
    0xC7, 0x44, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ss:[ebp+eax*4],0
    0xEB, 0xE4, # jmp witness_d3d11.4AB1B0
    0x33, 0xC9, # xor ecx,ecx
    0x8B, 0xFF, # mov edi,edi
    0x3B, 0x8E, 0xD8, 0x02, 0x00, 0x00, # cmp ecx,dword ptr ds:[esi+2D8]
    0x7D, 0x13, # jge witness_d3d11.4AB1EB
    0x8B, 0x86, 0xE0, 0x02, 0x00, 0x00, # mov eax,dword ptr ds:[esi+2E0]
    0x8B, 0x04, 0x88, # mov eax,dword ptr ds:[eax+ecx*4]
    0x41, # inc ecx
    0xC7, 0x04, 0x82, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ds:[edx+eax*4],0
    0xEB, 0xE5, # jmp witness_d3d11.4AB1D0
    0x89, 0x6C, 0x24, 0x24, # mov dword ptr ss:[esp+24],ebp
    0xB3, 0x01, # mov bl,1
    0x89, 0x54, 0x24, 0x2C, # mov dword ptr ss:[esp+2C],edx
    0xEB, 0x14, # jmp witness_d3d11.4AB20B
    0x8B, 0x86, 0x98, 0x03, 0x00, 0x00, # mov eax,dword ptr ds:[esi+398]
    0x89, 0x44, 0x24, 0x24, # mov dword ptr ss:[esp+24],eax
    0x8B, 0x86, 0x6C, 0x03, 0x00, 0x00, # mov eax,dword ptr ds:[esi+36C]
    0x89, 0x44, 0x24, 0x2C, # mov dword ptr ss:[esp+2C],eax
    0x8B, 0x86, 0x9C, 0x03, 0x00, 0x00, # mov eax,dword ptr ds:[esi+39C]
    0x89, 0x44, 0x24, 0x28, # mov dword ptr ss:[esp+28],eax
    0x8B, 0x86, 0x94, 0x03, 0x00, 0x00, # mov eax,dword ptr ds:[esi+394]
    0x89, 0x44, 0x24, 0x30, # mov dword ptr ss:[esp+30],eax
    0x8D, 0x44, 0x24, 0x24, # lea eax,dword ptr ss:[esp+24]
    0x50, # push eax
    0x56, # push esi
    0xE8, 0xE6, 0xFA, 0xFF, 0xFF, # call <witness_d3d11.judge_panel>
    0x83, 0xC4, 0x08, # add esp,8
    0x84, 0xDB, # test bl,bl
    0x74, 0x25, # je witness_d3d11.4AB256
    0xFF, 0x74, 0x24, 0x24, # push dword ptr ss:[esp+24]
    0xE8, 0xC0, 0xFD, 0x29, 0x00, # call <witness_d3d11.void __cdecl operator delete[](void *)>
    0xFF, 0x74, 0x24, 0x30, # push dword ptr ss:[esp+30]
    0xC7, 0x44, 0x24, 0x2C, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ss:[esp+2C],0
    0xE8, 0xAF, 0xFD, 0x29, 0x00, # call <witness_d3d11.void __cdecl operator delete[](void *)>
    0x83, 0xC4, 0x08, # add esp,8
    0xC7, 0x44, 0x24, 0x2C, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ss:[esp+2C],0
    0x0F, 0xB6, 0x44, 0x24, 0x6C, # movzx eax,byte ptr ss:[esp+6C]
    0x33, 0xC9, # xor ecx,ecx
    0x38, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00, # cmp byte ptr ss:[esp+80],cl
    0x0F, 0x57, 0xC0, # xorps xmm0,xmm0
    0x88, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00, # mov byte ptr ss:[esp+80],cl
    0x0F, 0x45, 0xC1, # cmovne eax,ecx
    0x66, 0x0F, 0xD6, 0x44, 0x24, 0x10, # movq qword ptr ss:[esp+10],xmm0
    0x88, 0x44, 0x24, 0x6C, # mov byte ptr ss:[esp+6C],al
    0x84, 0xC0, # test al,al
    0x74, 0x70, # je witness_d3d11.4AB2EF
    0x8B, 0x86, 0x24, 0x02, 0x00, 0x00, # mov eax,dword ptr ds:[esi+224]
    0x8D, 0x59, 0x64, # lea ebx,dword ptr ds:[ecx+64]
    0x85, 0xC0, # test eax,eax
    0xC7, 0x86, 0x38, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+238],1
    0xB9, 0x78, 0x54, 0x83, 0x00, # mov ecx,witness_d3d11.835478
    0xC7, 0x86, 0x4C, 0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, # mov dword ptr ds:[esi+24C],3F800000
    0x0F, 0x45, 0xC8, # cmovne ecx,eax
    0xC7, 0x86, 0x50, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+250],1
    0x8D, 0x44, 0x24, 0x78, # lea eax,dword ptr ss:[esp+78]
    0x89, 0x4C, 0x24, 0x78, # mov dword ptr ss:[esp+78],ecx
    0x50, # push eax
    0x8D, 0x44, 0x24, 0x28, # lea eax,dword ptr ss:[esp+28]
    0x50, # push eax
    0x56, # push esi
    0xE8, 0xDC, 0x99, 0xFF, 0xFF, # call <witness_d3d11.bool __cdecl do_success_side_effects(struct Entity_Machin
    0x83, 0xC4, 0x0C, # add esp,C
    0x88, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, # mov byte ptr ss:[esp+80],al
    0xF6, 0x86, 0xB4, 0x03, 0x00, 0x00, 0x80, # test byte ptr ds:[esi+3B4],80
    0x74, 0x0F, # je witness_d3d11.4AB2E6
    0x56, # push esi
    0xE8, 0xB3, 0xE2, 0x0A, 0x00, # call <witness_d3d11.void __cdecl activate_radar_item(struct Entity *)>
    0x8B, 0x7C, 0x24, 0x7C, # mov edi,dword ptr ss:[esp+7C]
    0xE9, 0x11, 0x01, 0x00, 0x00, # jmp witness_d3d11.4AB3F7
    0x8B, 0x7C, 0x24, 0x78, # mov edi,dword ptr ss:[esp+78]
    0xE9, 0x0B, 0x01, 0x00, 0x00, # jmp witness_d3d11.4AB3FA
    0xF7, 0x86, 0xB4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, # test dword ptr ds:[esi+3B4],40000000
    0x74, 0x0F, # je witness_d3d11.4AB30A
    0x56, # push esi
    0xE8, 0x5F, 0x8C, 0xFF, 0xFF, # call <witness_d3d11.void __cdecl clear_letorre_panel_points(struct Entity_Mac
    0x56, # push esi
    0xE8, 0x49, 0x92, 0xFF, 0xFF, # call <witness_d3d11.create_letorre_panel_points>
    0x83, 0xC4, 0x08, # add esp,8
    0xF7, 0x86, 0xB4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, # test dword ptr ds:[esi+3B4],8000000
    0x74, 0x0D, # je witness_d3d11.4AB323
    0x6A, 0x00, # push 0
    0x6A, 0x00, # push 0
    0x56, # push esi
    0xE8, 0x60, 0x1E, 0x00, 0x00, # call <witness_d3d11.void __cdecl move_clev_nolight(struct Entity_Machine_Pane
    0x83, 0xC4, 0x0C, # add esp,C
    0x83, 0xBE, 0xC0, 0x02, 0x00, 0x00, 0x00, # cmp dword ptr ds:[esi+2C0],0
    0x74, 0x4F, # je witness_d3d11.4AB37B
    0x83, 0xBE, 0xCC, 0x02, 0x00, 0x00, 0x00, # cmp dword ptr ds:[esi+2CC],0
    0x74, 0x46, # je witness_d3d11.4AB37B
    0x80, 0x7C, 0x24, 0x6E, 0x00, # cmp byte ptr ss:[esp+6E],0
    0x74, 0x3F, # je witness_d3d11.4AB37B
    0xF6, 0x86, 0xB4, 0x03, 0x00, 0x00, 0x04, # test byte ptr ds:[esi+3B4],4
    0xBF, 0x88, 0x54, 0x83, 0x00, # mov edi,witness_d3d11.835488
    0xC7, 0x86, 0x38, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+238],4
    0xC7, 0x86, 0xC8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x3F, # mov dword ptr ds:[esi+2C8],3F400000
    0x0F, 0x85, 0xA9, 0x00, 0x00, 0x00, # jne witness_d3d11.4AB40B
    0xC7, 0x86, 0x3C, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+23C],1
    0xC7, 0x86, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+240],0
    0xE9, 0x90, 0x00, 0x00, 0x00, # jmp witness_d3d11.4AB40B
    0x8B, 0x86, 0xB4, 0x03, 0x00, 0x00, # mov eax,dword ptr ds:[esi+3B4]
    0xBB, 0xE8, 0x03, 0x00, 0x00, # mov ebx,3E8
    0xC7, 0x86, 0x38, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+238],2
    0xBF, 0xA0, 0x54, 0x83, 0x00, # mov edi,witness_d3d11.8354A0
    0xA9, 0x00, 0x00, 0x01, 0x00, # test eax,10000
    0x74, 0x0C, # je witness_d3d11.4AB3A8
    0xC7, 0x86, 0x34, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, # mov dword ptr ds:[esi+234],40000000
    0xEB, 0x20, # jmp witness_d3d11.4AB3C8
    0xF3, 0x0F, 0x10, 0x86, 0x34, 0x02, 0x00, 0x00, # movss xmm0,dword ptr ds:[esi+234]
    0xF3, 0x0F, 0x10, 0x0D, 0x70, 0x27, 0x83, 0x00, # movss xmm1,dword ptr ds:[<__real@41400000>]
    0x0F, 0x2F, 0xC1, # comiss xmm0,xmm1
    0x77, 0x03, # ja witness_d3d11.4AB3C0
    0x0F, 0x28, 0xC1, # movaps xmm0,xmm1
    0xF3, 0x0F, 0x11, 0x86, 0x34, 0x02, 0x00, 0x00, # movss dword ptr ds:[esi+234],xmm0
    0xC7, 0x86, 0x28, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+328],1
    0xA8, 0x04, # test al,4
    0x75, 0x24, # jne witness_d3d11.4AB3FA
    0xC7, 0x86, 0x3C, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+23C],1
    0xC7, 0x86, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ds:[esi+240],0
    0xA9, 0x00, 0x00, 0x08, 0x00, # test eax,80000
    0x74, 0x09, # je witness_d3d11.4AB3FA
    0x56, # push esi
    0xE8, 0x89, 0xC4, 0xFF, 0xFF, # call <witness_d3d11.void __cdecl flash_giant_floor_subpanel_errors(struct Ent
    0x83, 0xC4, 0x04, # add esp,4
    0x53, # push ebx
    0xE8, 0xB0, 0xF1, 0x12, 0x00, # call <witness_d3d11.void __cdecl steamworks_controller_pulse(unsigned short)>
    0x83, 0xC4, 0x04, # add esp,4
    0x85, 0xFF, # test edi,edi
    0x0F, 0x84, 0xF2, 0x00, 0x00, 0x00, # je witness_d3d11.4AB4FD
    0x8B, 0x86, 0x2C, 0x02, 0x00, 0x00, # mov eax,dword ptr ds:[esi+22C]
    0x85, 0xC0, # test eax,eax
    0x74, 0x13, # je witness_d3d11.4AB428
    0x57, # push edi
    0x50, # push eax
    0x68, 0x4C, 0x38, 0x83, 0x00, # push witness_d3d11.83384C
    0xE8, 0x4F, 0xAA, 0x1B, 0x00, # call <witness_d3d11.char * __cdecl mprintf(char const *,...)>
    0x83, 0xC4, 0x0C, # add esp,C
    0x8B, 0xE8, # mov ebp,eax
    0xEB, 0x02, # jmp witness_d3d11.4AB42A
    0x8B, 0xEF, # mov ebp,edi
    0xF3, 0x0F, 0x7E, 0x44, 0x24, 0x10, # movq xmm0,qword ptr ss:[esp+10]
    0x6A, 0x00, # push 0
    0x6A, 0x00, # push 0
    0x6A, 0x00, # push 0
    0x56, # push esi
    0x83, 0xEC, 0x0C, # sub esp,C
    0x0F, 0x14, 0xC0, # unpcklps xmm0,xmm0
    0x8B, 0xCC, # mov ecx,esp
    0xC7, 0x44, 0x24, 0x3C, 0x00, 0x00, 0x00, 0x00, # mov dword ptr ss:[esp+3C],0
    0x8B, 0x44, 0x24, 0x3C, # mov eax,dword ptr ss:[esp+3C]
    0x55, # push ebp
    0x66, 0x0F, 0xD6, 0x01, # movq qword ptr ds:[ecx],xmm0
    0x6A, 0x00, # push 0
    0x89, 0x41, 0x08, # mov dword ptr ds:[ecx+8],eax
    0xE8, 0xB6, 0x96, 0x14, 0x00, # call <witness_d3d11.struct Entity_Issued_Sound * __cdecl play_sound(struct En
    0x8B, 0xD8, # mov ebx,eax
    0x83, 0xC4, 0x24, # add esp,24
    0x85, 0xDB, # test ebx,ebx
    0x74, 0x18, # je witness_d3d11.4AB47B
    0xF3, 0x0F, 0x10, 0x86, 0x04, 0x03, 0x00, 0x00, # movss xmm0,dword ptr ds:[esi+304]
    0xF3, 0x0F, 0x59, 0x83, 0xB4, 0x00, 0x00, 0x00, # mulss xmm0,dword ptr ds:[ebx+B4]
    0xF3, 0x0F, 0x11, 0x83, 0xB4, 0x00, 0x00, 0x00, # movss dword ptr ds:[ebx+B4],xmm0
    0x3B, 0xEF, # cmp ebp,edi
    0x74, 0x09, # je witness_d3d11.4AB488
    0x55, # push ebp
    0xE8, 0x5B, 0x29, 0x1B, 0x00, # call <witness_d3d11.void __cdecl gamelib_free_string(char const *)>
    0x83, 0xC4, 0x04, # add esp,4
    0x85, 0xDB, # test ebx,ebx
    0x74, 0x71, # je witness_d3d11.4AB4FD
    0x8B, 0x86, 0xF8, 0x01, 0x00, 0x00, # mov eax,dword ptr ds:[esi+1F8]
    0x85, 0xC0, # test eax,eax
    0x74, 0x67, # je witness_d3d11.4AB4FD
    0x6A, 0x06, # push 6
    0x68, 0x30, 0x4E, 0x83, 0x00, # push witness_d3d11.834E30
    0x50, # push eax
    0xE8, 0x2D, 0x53, 0x2A, 0x00, # call <witness_d3d11._strncmp>
    0x83, 0xC4, 0x0C, # add esp,C
    0x85, 0xC0, # test eax,eax
    0x75, 0x53, # jne witness_d3d11.4AB4FD
    0xE8, 0x61, 0x76, 0x0F, 0x00, # call <witness_d3d11.struct Entity_Machine_Panel * __cdecl get_active_panel(vo
    0x3B, 0xF0, # cmp esi,eax
    0x74, 0x29, # je witness_d3d11.4AB4DC
    0x8B, 0x0D, 0x70, 0xBB, 0x8E, 0x00, # mov ecx,dword ptr ds:[8EBB70]
    0x83, 0xEC, 0x08, # sub esp,8
    0xC7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x3F, # mov dword ptr ss:[esp+4],3F000000
    0xC7, 0x04, 0x24, 0xCD, 0xCC, 0x4C, 0x3D, # mov dword ptr ss:[esp],3D4CCCCD
    0xE8, 0xE0, 0x50, 0x1C, 0x00, # call <witness_d3d11.public: float __thiscall Random_Generator::get_within_ran
    0xD8, 0x83, 0xAC, 0x00, 0x00, 0x00, # fadd st(0),dword ptr ds:[ebx+AC]
    0xD9, 0x9B, 0xAC, 0x00, 0x00, 0x00, # fstp dword ptr ds:[ebx+AC],st(0)
    0x83, 0xBE, 0x38, 0x02, 0x00, 0x00, 0x01, # cmp dword ptr ds:[esi+238],1
    0x75, 0x18, # jne witness_d3d11.4AB4FD
    0xF3, 0x0F, 0x10, 0x83, 0xB4, 0x00, 0x00, 0x00, # movss xmm0,dword ptr ds:[ebx+B4]
    0xF3, 0x0F, 0x59, 0x05, 0xD0, 0x26, 0x83, 0x00, # mulss xmm0,dword ptr ds:[<__real@3ee66666>]
    0xF3, 0x0F, 0x11, 0x83, 0xB4, 0x00, 0x00, 0x00, # movss dword ptr ds:[ebx+B4],xmm0
    0x80, 0x7C, 0x24, 0x6C, 0x00, # cmp byte ptr ss:[esp+6C],0
    0x74, 0x5F, # je witness_d3d11.4AB563
    0x80, 0xBC, 0x24, 0x80, 0x00, 0x00, 0x00, 0x00, # cmp byte ptr ss:[esp+80],0
    0x74, 0x75, # je witness_d3d11.4AB583
    0x80, 0x7C, 0x24, 0x7C, 0x00, # cmp byte ptr ss:[esp+7C],0
    0x74, 0x6E, # je witness_d3d11.4AB583
    0x8B, 0x86, 0x6C, 0x02, 0x00, 0x00, # mov eax,dword ptr ds:[esi+26C]
    0x85, 0xC0, # test eax,eax
    0x74, 0x0A, # je witness_d3d11.4AB529
    0x56, # push esi
    0x50, # push eax
    0xE8, 0x9A, 0x21, 0x00, 0x00, # call <witness_d3d11.void __cdecl power_item(int,struct Entity *)>
    0x83, 0xC4, 0x08, # add esp,8
    0x8B, 0x8E, 0x78, 0x02, 0x00, 0x00, # mov ecx,dword ptr ds:[esi+278]
    0x85, 0xC9, # test ecx,ecx
    0x74, 0x50, # je witness_d3d11.4AB583
    0xA1, 0x68, 0xBB, 0x8E, 0x00, # mov eax,dword ptr ds:[<struct Client_Globals globals>]
    0x2B, 0x48, 0x04, # sub ecx,dword ptr ds:[eax+4]
    0x78, 0x46, # js witness_d3d11.4AB583
    0x3B, 0x48, 0x08, # cmp ecx,dword ptr ds:[eax+8]
    0x7D, 0x41, # jge witness_d3d11.4AB583
    0x8B, 0x40, 0x10, # mov eax,dword ptr ds:[eax+10]
    0x8B, 0x04, 0x88, # mov eax,dword ptr ds:[eax+ecx*4]
    0x85, 0xC0, # test eax,eax
    0x74, 0x37, # je witness_d3d11.4AB583
    0x81, 0x78, 0x04, 0xC4, 0xC2, 0x8E, 0x00, # cmp dword ptr ds:[eax+4],<witness_d3d11.struct Entity_Type_Bridge ptype_Bridg
    0x75, 0x2E, # jne witness_d3d11.4AB583
    0xFF, 0x76, 0x08, # push dword ptr ds:[esi+8]
    0x50, # push eax
    0xE8, 0x72, 0xF4, 0xFC, 0xFF, # call <witness_d3d11.void __cdecl bridge_advance(struct Entity_Bridge *,int)>
    0x83, 0xC4, 0x08, # add esp,8
    0xEB, 0x20, # jmp witness_d3d11.4AB583
    0x83, 0xBE, 0x70, 0x02, 0x00, 0x00, 0x00, # cmp dword ptr ds:[esi+270],0
    0x74, 0x17, # je witness_d3d11.4AB583
    0x83, 0xBE, 0xC0, 0x02, 0x00, 0x00, 0x00, # cmp dword ptr ds:[esi+2C0],0
    0x74, 0x07, # je witness_d3d11.4AB57C
    0x80, 0x7C, 0x24, 0x6E, 0x00, # cmp byte ptr ss:[esp+6E],0
    0x75, 0x07, # jne witness_d3d11.4AB583
    0x8B, 0xCE, # mov ecx,esi
    0xE8, 0xCD, 0x22, 0x00, 0x00, # call <witness_d3d11.public: void __thiscall Entity_Machine_Panel::power_off(v
    0x8A, 0x5C, 0x24, 0x6C, # mov bl,byte ptr ss:[esp+6C]
    0x8D, 0x44, 0x24, 0x60, # lea eax,dword ptr ss:[esp+60]
    0x50, # push eax
    0xE8, 0x8F, 0x47, 0x1B, 0x00, # call <witness_d3d11.void __cdecl _auto_array_deallocate(void * *)>
    0x8D, 0x44, 0x24, 0x58, # lea eax,dword ptr ss:[esp+58]
    0x50, # push eax
    0xE8, 0x85, 0x47, 0x1B, 0x00, # call <witness_d3d11.void __cdecl _auto_array_deallocate(void * *)>
    0x8D, 0x44, 0x24, 0x50, # lea eax,dword ptr ss:[esp+50]
    0x50, # push eax
    0xE8, 0x7B, 0x47, 0x1B, 0x00, # call <witness_d3d11.void __cdecl _auto_array_deallocate(void * *)>
    0x8D, 0x44, 0x24, 0x48, # lea eax,dword ptr ss:[esp+48]
    0x50, # push eax
    0xE8, 0x71, 0x47, 0x1B, 0x00, # call <witness_d3d11.void __cdecl _auto_array_deallocate(void * *)>
    0x83, 0xC4, 0x10, # add esp,10
    0x8A, 0xC3, # mov al,bl
    0x5F, # pop edi
    0x5E, # pop esi
    0x5D, # pop ebp
    0x5B, # pop ebx
    0x83, 0xC4, 0x64, # add esp,64
    0xC3, # ret
  ]
  parser = Parser(bytes)
  parser.add_function(0x00)
  parser.parse_function()
  parser.functions[0x00].postproc(parser.functions)
  parser.print_out()
  
if __name__ == '__main__':
  test6()
